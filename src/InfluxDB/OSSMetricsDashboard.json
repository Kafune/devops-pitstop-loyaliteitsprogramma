[{"apiVersion":"influxdata.com/v2alpha1","kind":"Dashboard","metadata":{"name":"musing-cray-9ea001"},"spec":{"charts":[{"colors":[{"id":"base","name":"white","type":"text","hex":"#ffffff"}],"fieldOptions":[{"displayName":"Uptime Hours","fieldName":"Uptime Hours","visible":true},{"displayName":"Instance ID","fieldName":"Instance ID","visible":true}],"height":3,"kind":"Table","name":"Uptime","queries":[{"query":"import \"math\"\n\nfrom(bucket: \"oss_metrics\")\n    |> range(start:v.timeRangeStart, stop: v.timeRangeStop)\n    |> filter(fn: (r) =>r._measurement == \"influxdb_uptime_seconds\")\n    |> filter(fn:(r) => r._field == \"gauge\")\n    |> last()\n    |> drop(columns:[\n        \"_start\",\n        \"_stop\",\n        \"_time\",\n        \"_measurement\",\n        \"_field\",\n        \"url\",\n    ])\n    |> map(fn: (r)=> ({r with _value: math.round(x: float(v: r._value) / 60.0 / 60.0* 100.0) / 100.0}))\n    |> group()\n    |> rename(columns: {_value: \"Uptime Hours\", id: \"Instance ID\"})"}],"staticLegend":{},"tableOptions":{"verticalTimeAxis":true},"timeFormat":"YYYY-MM-DD HH:mm:ss","width":4},{"colors":[{"id":"base","name":"white","type":"text","hex":"#ffffff"}],"fieldOptions":[{"displayName":"# of Orgs","fieldName":"# of Orgs","visible":true}],"height":2,"kind":"Table","name":"Organizations","queries":[{"query":"from(bucket: \"oss_metrics\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r._measurement == \"influxdb_organizations_total\")\n  |> last()\n  |> drop(columns: [\"_start\", \"_stop\",\"_time\",\"_measurement\", \"_field\", \"url\"])\n  |> group()\n  |> rename(columns: {_value: \"# of Orgs\"})"}],"staticLegend":{},"tableOptions":{"verticalTimeAxis":true},"timeFormat":"YYYY-MM-DD HH:mm:ss","width":3,"yPos":3},{"colors":[{"id":"base","name":"white","type":"text","hex":"#ffffff"}],"fieldOptions":[{"displayName":"# of Telegraf Configs","fieldName":"# of Telegraf Configs","visible":true}],"height":2,"kind":"Table","name":"Telegraf Configs","queries":[{"query":"from(bucket: \"oss_metrics\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r._measurement == \"influxdb_telegrafs_total\")\n  |> last()\n  |> drop(columns: [\"_start\", \"_stop\",\"_time\",\"_measurement\", \"_field\", \"url\"])\n  |> group()\n  |> rename(columns: {_value: \"# of Telegraf Configs\"})"}],"staticLegend":{},"tableOptions":{"verticalTimeAxis":true},"timeFormat":"YYYY-MM-DD HH:mm:ss","width":3,"yPos":5},{"axes":[{"base":"10","name":"x","scale":"linear"},{"base":"10","name":"y","scale":"linear"}],"colors":[{"id":"2df496c5-614d-4d42-8590-0bf106d711e7","name":"Nineteen Eighty Four","type":"scale","hex":"#31C0F6"},{"id":"817fd4b1-56fd-4687-a93a-b8659677796b","name":"Nineteen Eighty Four","type":"scale","hex":"#A500A5"},{"id":"64e7fa3e-3633-4992-8296-2f8fe8ea84c7","name":"Nineteen Eighty Four","type":"scale","hex":"#FF7E27"}],"geom":"line","height":5,"hoverDimension":"auto","kind":"Xy","legendColorizeRows":true,"legendOpacity":1,"legendOrientationThreshold":100000000,"name":"Local Object Store Reads","position":"overlaid","queries":[{"query":"from(bucket: \"oss_metrics\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r._measurement == \"boltdb_reads_total\")\n  |> derivative(unit: 1s, nonNegative: true)\n  |> drop(columns: [\"url\", \"_measurement\"])"}],"staticLegend":{},"width":6,"xCol":"_time","yCol":"_value","yPos":7},{"axes":[{"base":"10","name":"x","scale":"linear"},{"base":"10","name":"y","scale":"linear"}],"colors":[{"id":"519954ff-d935-42f0-b016-f2dacd0614d9","name":"Nineteen Eighty Four","type":"scale","hex":"#31C0F6"},{"id":"a8672357-f006-4aa4-a7d3-0e30229cb218","name":"Nineteen Eighty Four","type":"scale","hex":"#A500A5"},{"id":"e5020d9e-cbf3-47ed-b8a4-e9def5c6e9ba","name":"Nineteen Eighty Four","type":"scale","hex":"#FF7E27"}],"geom":"line","height":4,"hoverDimension":"auto","kind":"Xy","legendColorizeRows":true,"legendOpacity":1,"legendOrientationThreshold":100000000,"name":"Query Requests","position":"overlaid","queries":[{"query":"from(bucket: \"oss_metrics\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r._measurement == \"http_api_requests_total\")\n  |> filter(fn: (r) => r.path == \"/api/v2/query\")\n  |> derivative(unit: 1s, nonNegative: true)"}],"staticLegend":{},"width":12,"xCol":"_time","yCol":"_value","yPos":12},{"axes":[{"base":"10","name":"x","scale":"linear"},{"base":"10","name":"y","scale":"linear"}],"geom":"line","height":3,"kind":"Xy","name":"Memory Allocations (Bytes)","queries":[{"query":"from(bucket: \"oss_metrics\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r._measurement == \"go_memstats_alloc_bytes_total\")\n  |> derivative(unit: 1s, nonNegative: true)"}],"staticLegend":{},"width":4,"xCol":"_time","yCol":"_value","yPos":16},{"colors":[{"id":"base","name":"white","type":"text","hex":"#ffffff"}],"fieldOptions":[{"displayName":"# of Users","fieldName":"# of Users","visible":true}],"height":2,"kind":"Table","name":"Users","queries":[{"query":"from(bucket: \"oss_metrics\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r._measurement == \"influxdb_users_total\")\n  |> last()\n  |> drop(columns: [\"_start\", \"_stop\",\"_time\",\"_measurement\", \"_field\", \"url\"])\n  |> group()\n  |> rename(columns: {_value: \"# of Users\"})"}],"staticLegend":{},"tableOptions":{"verticalTimeAxis":true},"timeFormat":"YYYY-MM-DD HH:mm:ss","width":3,"xPos":3,"yPos":3},{"colors":[{"id":"base","name":"white","type":"text","hex":"#ffffff"}],"height":2,"kind":"Table","name":"Dashboards","queries":[{"query":"from(bucket: \"oss_metrics\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r._measurement == \"influxdb_dashboards_total\")\n  |> last()\n  |> drop(columns: [\"_start\", \"_stop\",\"_time\",\"_measurement\", \"_field\", \"url\"])\n  |> group()\n  |> rename(columns: {_value: \"# of Dashboards\"})"}],"staticLegend":{},"tableOptions":{"verticalTimeAxis":true},"timeFormat":"YYYY-MM-DD HH:mm:ss","width":3,"xPos":3,"yPos":5},{"colors":[{"name":"laser","type":"text","hex":"#00C9FF"}],"fieldOptions":[{"displayName":"Architecture","fieldName":"Architecture","visible":true},{"displayName":"Build Date","fieldName":"Build Date","visible":true},{"displayName":"Github Commit","fieldName":"Github Commit","visible":true},{"displayName":"CPUs","fieldName":"CPUs","visible":true},{"displayName":"OS","fieldName":"OS","visible":true},{"displayName":"Version","fieldName":"Version","visible":true}],"height":3,"kind":"Table","name":"Instance Info","note":"This cell gives you information about your running instance of InfluxDB 2, but you probably already knew that.","queries":[{"query":"from(bucket: \"oss_metrics\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r._measurement == \"influxdb_info\")\n  |> last()\n  |> group()\n  |> drop(columns: [\"_start\", \"_stop\",\"_time\",\"_field\",\"_value\",\"_measurement\"])\n  |> rename(columns: {arch: \"Architecture\", build_date: \"Build Date\", commit: \"Github Commit\", cpus: \"CPUs\", os: \"OS\", version: \"Version\"})"}],"staticLegend":{},"tableOptions":{"fixFirstColumn":true,"verticalTimeAxis":true},"timeFormat":"YYYY-MM-DD HH:mm:ss","width":8,"xPos":4},{"axes":[{"base":"10","name":"x","scale":"linear"},{"base":"10","name":"y","scale":"linear"}],"colors":[{"id":"1e40d1f8-5ef8-4de8-b6d3-8b72ef56edde","name":"Nineteen Eighty Four","type":"scale","hex":"#31C0F6"},{"id":"f0321a25-31ce-43a6-8411-b894293ace66","name":"Nineteen Eighty Four","type":"scale","hex":"#A500A5"},{"id":"d2f7a375-d96a-444b-ab7e-f65f2ed9d57d","name":"Nineteen Eighty Four","type":"scale","hex":"#FF7E27"}],"geom":"line","height":3,"hoverDimension":"auto","kind":"Xy","legendColorizeRows":true,"legendOpacity":1,"legendOrientationThreshold":100000000,"name":"Memory Usage (%)","position":"overlaid","queries":[{"query":"bytes_used = from(bucket: \"oss_metrics\")\n    |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n    |> filter(fn: (r) => r._measurement == \"go_memstats_alloc_bytes\")\n    |> drop(columns: [\"_start\", \"_stop\"])\n\ntotal_bytes = from(bucket: \"oss_metrics\")\n    |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n    |> filter(fn: (r) => r._measurement == \"go_memstats_sys_bytes\")\n    |> drop(columns: [\"_start\", \"_stop\"])\n\njoin(tables: {key1: bytes_used, key2: total_bytes}, on: [\"_time\", \"host\"], method: \"inner\")\n    |> map(\n        fn: (r) => ({\n            _time: r._time,\n            host: r.host,\n            _value: float(v: r._value_key1) / float(v: r._value_key2) * 100.0,\n            _field: \"Memory Usage Percent\",\n        }),\n    )"}],"staticLegend":{},"width":4,"xCol":"_time","xPos":4,"yCol":"_value","yPos":16},{"colors":[{"id":"base","name":"white","type":"text","hex":"#ffffff"}],"height":2,"kind":"Table","name":"Buckets (Including System)","queries":[{"query":"from(bucket: \"oss_metrics\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r._measurement == \"influxdb_buckets_total\")\n  |> last()\n  |> drop(columns: [\"_start\", \"_stop\",\"_time\",\"_measurement\", \"_field\", \"url\"])\n  |> group()\n  |> rename(columns: {_value: \"# of Buckets\"})"}],"staticLegend":{},"tableOptions":{"verticalTimeAxis":true},"timeFormat":"YYYY-MM-DD HH:mm:ss","width":3,"xPos":6,"yPos":3},{"colors":[{"id":"base","name":"white","type":"text","hex":"#ffffff"}],"fieldOptions":[{"displayName":"# of Scrapers","fieldName":"# of Scrapers","visible":true}],"height":2,"kind":"Table","name":"Scrapers","queries":[{"query":"from(bucket: \"oss_metrics\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r._measurement == \"influxdb_scrapers_total\")\n  |> last()\n  |> drop(columns: [\"_start\", \"_stop\",\"_time\",\"_measurement\", \"_field\", \"url\"])\n  |> group()\n  |> rename(columns: {_value: \"# of Scrapers\"})"}],"staticLegend":{},"tableOptions":{"verticalTimeAxis":true},"timeFormat":"YYYY-MM-DD HH:mm:ss","width":3,"xPos":6,"yPos":5},{"axes":[{"base":"10","name":"x","scale":"linear"},{"base":"10","name":"y","scale":"linear"}],"colors":[{"id":"2df496c5-614d-4d42-8590-0bf106d711e7","name":"Nineteen Eighty Four","type":"scale","hex":"#31C0F6"},{"id":"817fd4b1-56fd-4687-a93a-b8659677796b","name":"Nineteen Eighty Four","type":"scale","hex":"#A500A5"},{"id":"64e7fa3e-3633-4992-8296-2f8fe8ea84c7","name":"Nineteen Eighty Four","type":"scale","hex":"#FF7E27"}],"geom":"line","height":5,"hoverDimension":"auto","kind":"Xy","legendColorizeRows":true,"legendOpacity":1,"legendOrientationThreshold":100000000,"name":"Local Object Store Writes","position":"overlaid","queries":[{"query":"from(bucket: \"oss_metrics\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r._measurement == \"boltdb_writes_total\")\n  |> derivative(unit: 1s, nonNegative: true)\n  |> drop(columns: [\"url\", \"_measurement\"])"}],"staticLegend":{},"width":6,"xCol":"_time","xPos":6,"yCol":"_value","yPos":7},{"axes":[{"base":"10","name":"x","scale":"linear"},{"base":"10","name":"y","scale":"linear"}],"colors":[{"id":"1e40d1f8-5ef8-4de8-b6d3-8b72ef56edde","name":"Nineteen Eighty Four","type":"scale","hex":"#31C0F6"},{"id":"f0321a25-31ce-43a6-8411-b894293ace66","name":"Nineteen Eighty Four","type":"scale","hex":"#A500A5"},{"id":"d2f7a375-d96a-444b-ab7e-f65f2ed9d57d","name":"Nineteen Eighty Four","type":"scale","hex":"#FF7E27"}],"geom":"line","height":3,"hoverDimension":"auto","kind":"Xy","legendColorizeRows":true,"legendOpacity":1,"legendOrientationThreshold":100000000,"name":"Memory Allocs & Frees (Bytes)","position":"overlaid","queries":[{"query":"from(bucket: \"oss_metrics\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r._measurement == \"go_memstats_mallocs_total\" or r._measurement == \"go_memstats_frees_total\")\n  |> derivative(unit: 1s, nonNegative: false)"}],"staticLegend":{},"width":4,"xCol":"_time","xPos":8,"yCol":"_value","yPos":16},{"colors":[{"id":"base","name":"white","type":"text","hex":"#ffffff"}],"height":2,"kind":"Table","name":"Tokens","queries":[{"query":"from(bucket: \"oss_metrics\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r._measurement == \"influxdb_tokens_total\")\n  |> last()\n  |> drop(columns: [\"_start\", \"_stop\",\"_time\",\"_measurement\", \"_field\", \"url\"])\n  |> group()\n  |> rename(columns: {_value: \"# of Tokens\"})"}],"staticLegend":{},"tableOptions":{"verticalTimeAxis":true},"timeFormat":"YYYY-MM-DD HH:mm:ss","width":3,"xPos":9,"yPos":3},{"colors":[{"id":"base","name":"white","type":"text","hex":"#ffffff"}],"fieldOptions":[{"displayName":"_time","fieldName":"_time","visible":true},{"displayName":"_value","fieldName":"_value","visible":true},{"displayName":"_field","fieldName":"_field","visible":true},{"displayName":"_measurement","fieldName":"_measurement","visible":true},{"displayName":"status","fieldName":"status","visible":true},{"displayName":"task_type","fieldName":"task_type","visible":true},{"displayName":"# of Task Runs","fieldName":"# of Task Runs","visible":true},{"displayName":"Host","fieldName":"Host","visible":true}],"height":2,"kind":"Table","name":"Successful Task Runs","queries":[{"query":"import \"csv\"\n\nfrom(bucket: \"oss_metrics\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r._measurement == \"task_executor_total_runs_complete\")\n  |> filter(fn: (r) => r.status == \"success\")\n  |> filter(fn: (r) => r.task_type == \"system\")\n  |> last()\n  |> drop(columns: [\"_start\", \"_stop\",\"_time\",\"_measurement\", \"_field\", \"url\"])\n  |> group()\n  |> rename(columns: {_value: \"# of Task Runs\"})"}],"staticLegend":{},"tableOptions":{"verticalTimeAxis":true},"timeFormat":"YYYY-MM-DD HH:mm:ss","width":3,"xPos":9,"yPos":5}],"description":"A collection of useful visualizations for monitoring your local InfluxDB 2.0 OSS instance.","name":"InfluxDB OSS Metrics"}}]